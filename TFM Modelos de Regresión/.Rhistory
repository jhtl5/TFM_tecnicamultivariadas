library(lmtest)
library(car)
library(lme4)
library(lubridate)
library(MuMIn)
library(ggthemes)
library(rpart)
library(e1071)
### cargar la base de datos
datos <- readxl::read_excel("datos/DataTFM.XLSX", sheet = "Base de datos")
## organizamos la data de acuerdo a le fecha de ejecución
datos <- datos[order(datos$fe.Ejecutada), ]
### Cambiar nombres de la base de datos
colnames(datos) <- c("Epoca del año", "estrategia Mtto",
"Programa Mtto", "Ready back log",
"HH Actv Gnerales", "HH En la Maquina",
"Otras HH", "Tipo mantenimiento",
"Disciplina", "Fecha Creada Orden",
"fecha Ejecutada")
## eliminar datos atípicos y vacios
datos <- na.omit(datos)
### Filtro de hampel para eliminar los valores vacios
limite_inferior <-  median(datos$`HH En la Maquina`) - 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_inferior
limite_superior <-  median(datos$`HH En la Maquina`) + 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_superior
atipicos <- which(datos$`HH En la Maquina` <
limite_inferior |
datos$`HH En la Maquina` >
limite_superior)
## filtramos los valores atípicos
datos <- datos[-atipicos,  ]
## creamos una función para extraer el valor atípico
atipicos <- function(x){
## encontramos los valores atípicos para la variable que representa horas generales
limite_inferior <-  median(x) - 3 *
mad(x, constant = 1)
limite_superior <-  median(x) + 3 *
mad(x, constant = 1)
## encontramos los valores atípicos
atipicos <- which(x < limite_inferior |
x  > limite_superior)
return(atipicos)
}
#### Analizar el numero de horas en mantenimiento preventivo
### Numero de horas dirias
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$`fecha Ejecutada`),
mean)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"fecha Ejecutada", "Hrs Diarias Mantenimiento preventivo")
### Seleccionamos unicamente los mantenimientos preventivos
horas <- horas[horas$`Tipo mantenimiento` == "Preventivo", -1]
### unimos las bases de datos
datos <- merge(datos, horas, by = "fecha Ejecutada")
## creamos una variable de año y semana para agrupar
## usamos las funciones de week y year
datos$semana <- paste0(year(datos$`fecha Ejecutada`), "-",
week(datos$`fecha Ejecutada`))
#### creamos una variable de año y mes
## usamos las funciones de month y year
datos$mes <- paste0(year(datos$`fecha Ejecutada`), "-",
month(datos$`fecha Ejecutada`))
## Filtramos de la base de datos principal solo correctivo
datos <- datos[datos$`Tipo mantenimiento` == "Correctivo", -c(9, 11)]
### Aplicamos la función para eliminar los valores atipicos
# de las variables numericas
## filtramos las horas generales
datos <- datos[-atipicos(datos$`HH Actv Gnerales`), ]
## filtramos por otras horas
datos <- datos[-atipicos(datos$`Otras HH`), ]
## filtramos por las horas de mantenimiento diario
datos <- datos[-atipicos(datos$`Hrs Diarias Mantenimiento preventivo`), ]
summary(modelo_lineal2)
### creamos
semana <- datos %>%
group_by(semana, Disciplina, `Epoca del año`) %>%
summarize(
Cumplimiento_Estrategia =
mean(`estrategia Mtto`),
Cumplimiento_Programa = mean(`Programa Mtto`),
Ready_Backlog = mean(`Ready back log`),
HH_Actv_Gnerales = mean(`HH Actv Gnerales`),
HH_En_la_Maquina = mean(`HH En la Maquina`),
Otras_HH = mean(`Otras HH`),
Horas_D_promedio = mean(`Hrs Diarias Mantenimiento preventivo`)
)
## eliminamos posibles valores atípicos de las variables numéricas
semana[, 4:9] <- round(semana[, 4:9], 2)
for(j in colnames(semana)[4:9]){
semana <- semana[-atipicos(semana[[j]]), ]
}
View(modeloLMM)
View(semana)
## se omiten las variables fecha de creación y fecha de ejecución
modelo_lineal1 <- lm(`HH_En_la_Maquina` ~ .,
data = semana[, 2:12] |> na.omit())
## se omiten las variables fecha de creación y fecha de ejecución
modelo_lineal1 <- lm(`HH_En_la_Maquina` ~ .,
data = semana[, 2:10] |> na.omit())
summary(modelo_lineal1)
summary(modelo_lineal2)
modelo_lineal2 <- lm(`HH_En_la_Maquina` ~ . -1,
data = semana[, -c(1, 3:6)] |> na.omit())
summary(modelo_lineal2)
View(datos)
View(semana)
modelo_lineal2 <- lm(`HH_En_la_Maquina` ~ . ,
data = semana[, -c(1, 3:6)] |> na.omit())
summary(modelo_lineal2)
View(datos)
View(horas)
modelo_lineal2 <- lm(`HH_En_la_Maquina` ~ . ,
data = semana |> na.omit())
summary(modelo_lineal2)
View(datos)
View(datos)
### Paquetes necesarios
library(tidyverse)
library(readxl)
library(DT)
library(lmtest)
library(car)
library(lme4)
library(lubridate)
library(MuMIn)
library(ggthemes)
library(rpart)
library(e1071)
### cargar la base de datos
datos <- readxl::read_excel("datos/DataTFM.XLSX", sheet = "Base de datos")
## organizamos la data de acuerdo a le fecha de ejecución
datos <- datos[order(datos$fe.Ejecutada), ]
### Cambiar nombres de la base de datos
colnames(datos) <- c("Epoca del año", "estrategia Mtto",
"Programa Mtto", "Ready back log",
"HH Actv Gnerales", "HH En la Maquina",
"Otras HH", "Tipo mantenimiento",
"Disciplina", "Fecha Creada Orden",
"fecha Ejecutada")
## eliminar datos atípicos y vacios
datos <- na.omit(datos)
### Filtro de hampel para eliminar los valores vacios
limite_inferior <-  median(datos$`HH En la Maquina`) - 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_inferior
limite_superior <-  median(datos$`HH En la Maquina`) + 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_superior
atipicos <- which(datos$`HH En la Maquina` <
limite_inferior |
datos$`HH En la Maquina` >
limite_superior)
## filtramos los valores atípicos
datos <- datos[-atipicos,  ]
## creamos una función para extraer el valor atípico
atipicos <- function(x){
## encontramos los valores atípicos para la variable que representa horas generales
limite_inferior <-  median(x) - 3 *
mad(x, constant = 1)
limite_superior <-  median(x) + 3 *
mad(x, constant = 1)
## encontramos los valores atípicos
atipicos <- which(x < limite_inferior |
x  > limite_superior)
return(atipicos)
}
#### Analizar el numero de horas en mantenimiento preventivo
### Numero de horas dirias
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$`fecha Ejecutada`),
sum)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"fecha Ejecutada", "Hrs Diarias Mantenimiento preventivo")
### Seleccionamos unicamente los mantenimientos preventivos
horas <- horas[horas$`Tipo mantenimiento` == "Preventivo", -1]
### unimos las bases de datos
datos <- merge(datos, horas, by = "fecha Ejecutada")
## creamos una variable de año y semana para agrupar
## usamos las funciones de week y year
datos$semana <- paste0(year(datos$`fecha Ejecutada`), "-",
week(datos$`fecha Ejecutada`))
## Filtramos de la base de datos principal solo correctivo
datos <- datos[datos$`Tipo mantenimiento` == "Correctivo", -c(9, 11)]
### creamos una data agrupada por semana
semana <- datos %>%
group_by(semana, Disciplina, `Epoca del año`) %>%
summarize(
Cumplimiento_Estrategia =
mean(`estrategia Mtto`),
Cumplimiento_Programa = mean(`Programa Mtto`),
Ready_Backlog = mean(`Ready back log`),
HH_Actv_Gnerales = mean(`HH Actv Gnerales`),
HH_En_la_Maquina = mean(`HH En la Maquina`),
Otras_HH = mean(`Otras HH`),
Horas_D_promedio = mean(`Hrs Diarias Mantenimiento preventivo`)
)
## eliminamos posibles valores atípicos de las variables numéricas
semana[, 4:9] <- round(semana[, 4:9], 2)
for(j in colnames(semana)[4:9]){
semana <- semana[-atipicos(semana[[j]]), ]
}
### Modelos de regresión
## se omiten las variables fecha de creación y fecha de ejecución
modelo_lineal1 <- lm(`HH_En_la_Maquina` ~ .,
data = semana[, 2:10] |> na.omit())
summary(modelo_lineal1)
modelo_lineal2 <- lm(`HH_En_la_Maquina` ~ . -1,
data = semana[, -c(1, 3:6)] |> na.omit())
summary(modelo_lineal2)
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$semana),
sum)
### Paquetes necesarios
library(tidyverse)
library(readxl)
library(DT)
library(lmtest)
library(car)
library(lme4)
library(lubridate)
library(MuMIn)
library(ggthemes)
library(rpart)
library(e1071)
### cargar la base de datos
datos <- readxl::read_excel("datos/DataTFM.XLSX", sheet = "Base de datos")
## organizamos la data de acuerdo a le fecha de ejecución
datos <- datos[order(datos$fe.Ejecutada), ]
### Cambiar nombres de la base de datos
colnames(datos) <- c("Epoca del año", "estrategia Mtto",
"Programa Mtto", "Ready back log",
"HH Actv Gnerales", "HH En la Maquina",
"Otras HH", "Tipo mantenimiento",
"Disciplina", "Fecha Creada Orden",
"fecha Ejecutada")
## eliminar datos atípicos y vacios
datos <- na.omit(datos)
### Filtro de hampel para eliminar los valores vacios
limite_inferior <-  median(datos$`HH En la Maquina`) - 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_inferior
limite_superior <-  median(datos$`HH En la Maquina`) + 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_superior
atipicos <- which(datos$`HH En la Maquina` <
limite_inferior |
datos$`HH En la Maquina` >
limite_superior)
## filtramos los valores atípicos
datos <- datos[-atipicos,  ]
## creamos una función para extraer el valor atípico
atipicos <- function(x){
## encontramos los valores atípicos para la variable que representa horas generales
limite_inferior <-  median(x) - 3 *
mad(x, constant = 1)
limite_superior <-  median(x) + 3 *
mad(x, constant = 1)
## encontramos los valores atípicos
atipicos <- which(x < limite_inferior |
x  > limite_superior)
return(atipicos)
}
#### Analizar el numero de horas en mantenimiento preventivo
### Numero de horas diarias
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$`fecha Ejecutada`),
sum)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"fecha Ejecutada", "Hrs Diarias Mantenimiento preventivo")
### Seleccionamos unicamente los mantenimientos preventivos
horas <- horas[horas$`Tipo mantenimiento` == "Preventivo", -1]
### unimos las bases de datos
datos <- merge(datos, horas, by = "fecha Ejecutada")
## creamos una variable de año y semana para agrupar
## usamos las funciones de week y year
datos$semana <- paste0(year(datos$`fecha Ejecutada`), "-",
week(datos$`fecha Ejecutada`))
### Numero de horas diarias
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$semana),
sum)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"fecha Ejecutada", "Hrs Diarias Mantenimiento preventivo")
### Seleccionamos unicamente los mantenimientos preventivos
horas <- horas[horas$`Tipo mantenimiento` == "Preventivo", -1]
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$semana),
sum)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"semana", "Hrs Diarias Mantenimiento preventivo")
### unimos las bases de datos
datos <- merge(datos, horas, by = "semana")
## Filtramos de la base de datos principal solo correctivo
datos <- datos[datos$`Tipo mantenimiento` == "Correctivo", -c(9, 11)]
### creamos una data agrupada por semana
semana <- datos %>%
group_by(semana, Disciplina, `Epoca del año`) %>%
summarize(
Cumplimiento_Estrategia =
mean(`estrategia Mtto`),
Cumplimiento_Programa = mean(`Programa Mtto`),
Ready_Backlog = mean(`Ready back log`),
HH_Actv_Gnerales = mean(`HH Actv Gnerales`),
HH_En_la_Maquina = mean(`HH En la Maquina`),
Otras_HH = mean(`Otras HH`),
Horas_D_promedio = mean(`Hrs Diarias Mantenimiento preventivo`)
)
### Paquetes necesarios
library(tidyverse)
library(readxl)
library(DT)
library(lmtest)
library(car)
library(lme4)
library(lubridate)
library(MuMIn)
library(ggthemes)
library(rpart)
library(e1071)
### cargar la base de datos
datos <- readxl::read_excel("datos/DataTFM.XLSX", sheet = "Base de datos")
## organizamos la data de acuerdo a le fecha de ejecución
datos <- datos[order(datos$fe.Ejecutada), ]
### Cambiar nombres de la base de datos
colnames(datos) <- c("Epoca del año", "estrategia Mtto",
"Programa Mtto", "Ready back log",
"HH Actv Gnerales", "HH En la Maquina",
"Otras HH", "Tipo mantenimiento",
"Disciplina", "Fecha Creada Orden",
"fecha Ejecutada")
## eliminar datos atípicos y vacios
datos <- na.omit(datos)
### Filtro de hampel para eliminar los valores vacios
limite_inferior <-  median(datos$`HH En la Maquina`) - 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_inferior
limite_superior <-  median(datos$`HH En la Maquina`) + 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_superior
atipicos <- which(datos$`HH En la Maquina` <
limite_inferior |
datos$`HH En la Maquina` >
limite_superior)
## filtramos los valores atípicos
datos <- datos[-atipicos,  ]
## creamos una función para extraer el valor atípico
atipicos <- function(x){
## encontramos los valores atípicos para la variable que representa horas generales
limite_inferior <-  median(x) - 3 *
mad(x, constant = 1)
limite_superior <-  median(x) + 3 *
mad(x, constant = 1)
## encontramos los valores atípicos
atipicos <- which(x < limite_inferior |
x  > limite_superior)
return(atipicos)
}
#### Analizar el numero de horas en mantenimiento preventivo
### Numero de horas diarias
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$`fecha Ejecutada`),
sum)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"fecha Ejecutada", "Hrs Diarias Mantenimiento preventivo")
### Seleccionamos unicamente los mantenimientos preventivos
horas <- horas[horas$`Tipo mantenimiento` == "Preventivo", -1]
### unimos las bases de datos
datos <- merge(datos, horas, by = "fecha Ejecutada")
## creamos una variable de año y semana para agrupar
## usamos las funciones de week y year
datos$semana <- paste0(year(datos$`fecha Ejecutada`), "-",
week(datos$`fecha Ejecutada`))
### Numero de horas diarias
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$semana),
sum)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"semana", "Hrs Diarias Mantenimiento preventivo")
### Seleccionamos unicamente los mantenimientos preventivos
horas <- horas[horas$`Tipo mantenimiento` == "Preventivo", -1]
### unimos las bases de datos
datos <- merge(datos, horas, by = "semana")
View(datos)
### Paquetes necesarios
library(tidyverse)
library(readxl)
library(DT)
library(lmtest)
library(car)
library(lme4)
library(lubridate)
library(MuMIn)
library(ggthemes)
library(rpart)
library(e1071)
### cargar la base de datos
datos <- readxl::read_excel("datos/DataTFM.XLSX", sheet = "Base de datos")
## organizamos la data de acuerdo a le fecha de ejecución
datos <- datos[order(datos$fe.Ejecutada), ]
### Cambiar nombres de la base de datos
colnames(datos) <- c("Epoca del año", "estrategia Mtto",
"Programa Mtto", "Ready back log",
"HH Actv Gnerales", "HH En la Maquina",
"Otras HH", "Tipo mantenimiento",
"Disciplina", "Fecha Creada Orden",
"fecha Ejecutada")
## eliminar datos atípicos y vacios
datos <- na.omit(datos)
### Filtro de hampel para eliminar los valores vacios
limite_inferior <-  median(datos$`HH En la Maquina`) - 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_inferior
limite_superior <-  median(datos$`HH En la Maquina`) + 3 *
mad(datos$`HH En la Maquina`, constant = 1)
limite_superior
atipicos <- which(datos$`HH En la Maquina` <
limite_inferior |
datos$`HH En la Maquina` >
limite_superior)
## filtramos los valores atípicos
datos <- datos[-atipicos,  ]
## creamos una función para extraer el valor atípico
atipicos <- function(x){
## encontramos los valores atípicos para la variable que representa horas generales
limite_inferior <-  median(x) - 3 *
mad(x, constant = 1)
limite_superior <-  median(x) + 3 *
mad(x, constant = 1)
## encontramos los valores atípicos
atipicos <- which(x < limite_inferior |
x  > limite_superior)
return(atipicos)
}
#### Analizar el numero de horas en mantenimiento preventivo
### Numero de horas diarias
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$`fecha Ejecutada`),
sum)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"fecha Ejecutada", "Hrs Diarias Mantenimiento preventivo")
### Seleccionamos unicamente los mantenimientos preventivos
horas <- horas[horas$`Tipo mantenimiento` == "Preventivo", -1]
### unimos las bases de datos
datos <- merge(datos, horas, by = "fecha Ejecutada")
## creamos una variable de año y semana para agrupar
## usamos las funciones de week y year
datos$semana <- paste0(year(datos$`fecha Ejecutada`), "-",
week(datos$`fecha Ejecutada`))
### Numero de horas diarias
## Sumamos las horas en la maquina por tipo de mantenimiento
horas <- aggregate(datos$`HH En la Maquina`,
list(datos$`Tipo mantenimiento`,
datos$semana),
sum)
### Cambianos nombres
colnames(horas) <- c("Tipo mantenimiento",
"semana", "Hrs Semanales Mantenimiento preventivo")
### Seleccionamos unicamente los mantenimientos preventivos
horas <- horas[horas$`Tipo mantenimiento` == "Preventivo", -1]
### unimos las bases de datos
datos <- merge(datos, horas, by = "semana")
View(datos)
View(datos)
## Filtramos de la base de datos principal solo correctivo
datos <- datos[datos$`Tipo mantenimiento` == "Correctivo", -c(10, 12)]
### creamos una data agrupada por semana
semana <- datos %>%
group_by(semana, Disciplina, `Epoca del año`) %>%
summarize(
Cumplimiento_Estrategia =
mean(`estrategia Mtto`),
Cumplimiento_Programa = mean(`Programa Mtto`),
Ready_Backlog = mean(`Ready back log`),
HH_Actv_Gnerales = mean(`HH Actv Gnerales`),
HH_En_la_Maquina = mean(`HH En la Maquina`),
Otras_HH = mean(`Otras HH`),
Horas_D_promedio = mean(`Hrs Diarias Mantenimiento preventivo`)
)
## eliminamos posibles valores atípicos de las variables numéricas
semana[, 4:9] <- round(semana[, 4:9], 2)
for(j in colnames(semana)[4:9]){
semana <- semana[-atipicos(semana[[j]]), ]
}
View(semana)
